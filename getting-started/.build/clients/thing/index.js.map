{"version":3,"names":["Client","launcher","loadConfig","createLayout","bootstrap","config","process","env","ENV","import","meta","url","client","register","start","$layout","err","console","error","execute","numClients","EMULATE","parseInt","moduleURL"],"sources":["../../../src/clients/thing/index.js"],"sourcesContent":["import '@soundworks/helpers/polyfills.js';\nimport { Client } from '@soundworks/core/client.js';\nimport launcher from '@soundworks/helpers/launcher.js';\n\nimport { loadConfig } from '../../utils/load-config.js';\nimport createLayout from './views/layout.js';\n\n// - General documentation: https://soundworks.dev/\n// - API documentation:     https://soundworks.dev/api\n// - Issue Tracker:         https://github.com/collective-soundworks/soundworks/issues\n// - Wizard & Tools:        `npx soundworks`\n\nasync function bootstrap() {\n  try {\n    /**\n     * Load configuration from config files and create the soundworks client\n     */\n    const config = loadConfig(process.env.ENV, import.meta.url);\n    const client = new Client(config);\n\n    /**\n     * Register some soundworks plugins\n     * you will need to install the plugins before hand, run `npx soundworks` for help\n     */\n    // client.pluginManager.register('platform', pluginPlatform, { audioContext });\n\n    /**\n     * Register the soundworks client into the launcher\n     *\n     * Automatically restarts the process when the socket closes or when an\n     * uncaught error occurs in the program.\n     */\n    launcher.register(client);\n\n    /**\n     * Launch application\n     */\n    await client.start();\n\n    // create application layout (which mimics lit API) and do your own stuff!\n\n    /* eslint-disable-next-line no-unused-vars */\n    const $layout = createLayout(client);\n\n  } catch(err) {\n    console.error(err);\n  }\n}\n\n// The launcher allows to fork multiple clients in the same terminal window\n// by defining the `EMULATE` env process variable\n// e.g. `EMULATE=10 npm run watch-process thing` to run 10 clients side-by-side\nlauncher.execute(bootstrap, {\n  numClients: process.env.EMULATE ? parseInt(process.env.EMULATE) : 1,\n  moduleURL: import.meta.url,\n});\n"],"mappings":"AAAA,OAAO,kCAAkC;AACzC,SAASA,MAAM,QAAQ,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,iCAAiC;AAEtD,SAASC,UAAU,QAAQ,4BAA4B;AACvD,OAAOC,YAAY,MAAM,mBAAmB;;AAE5C;AACA;AACA;AACA;;AAEA,eAAeC,SAAS,GAAG;EACzB,IAAI;IACF;AACJ;AACA;IACI,MAAMC,MAAM,GAAGH,UAAU,CAACI,OAAO,CAACC,GAAG,CAACC,GAAG,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC;IAC3D,MAAMC,MAAM,GAAG,IAAIZ,MAAM,CAACK,MAAM,CAAC;;IAEjC;AACJ;AACA;AACA;IACI;;IAEA;AACJ;AACA;AACA;AACA;AACA;IACIJ,QAAQ,CAACY,QAAQ,CAACD,MAAM,CAAC;;IAEzB;AACJ;AACA;IACI,MAAMA,MAAM,CAACE,KAAK,EAAE;;IAEpB;;IAEA;IACA,MAAMC,OAAO,GAAGZ,YAAY,CAACS,MAAM,CAAC;EAEtC,CAAC,CAAC,OAAMI,GAAG,EAAE;IACXC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB;AACF;;AAEA;AACA;AACA;AACAf,QAAQ,CAACkB,OAAO,CAACf,SAAS,EAAE;EAC1BgB,UAAU,EAAEd,OAAO,CAACC,GAAG,CAACc,OAAO,GAAGC,QAAQ,CAAChB,OAAO,CAACC,GAAG,CAACc,OAAO,CAAC,GAAG,CAAC;EACnEE,SAAS,EAAEd,MAAM,CAACC,IAAI,CAACC;AACzB,CAAC,CAAC"}
